{
  "openapi": "3.1.0",
  "info": {
    "title": "Deduplicator",
    "description": "\n    OpenG2P Deduplicator based on OpenSearch\n    ",
    "contact": {
      "url": "https://www.openg2p.org/",
      "email": "info@openg2p.org"
    },
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0/"
    },
    "version": "0.0.0"
  },
  "paths": {
    "/config/{name}": {
      "put": {
        "tags": [
          "config"
        ],
        "summary": "Put Dedupe Config",
        "operationId": "put_dedupe_config_config__name__put",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DedupeConfigHttpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DedupeConfigPutHttpResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Get Dedupe Config",
        "operationId": "get_dedupe_config_config__name__get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DedupeConfigGetHttpResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "config"
        ],
        "summary": "Delete Dedupe Config",
        "operationId": "delete_dedupe_config_config__name__delete",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DedupeConfigDeleteHttpResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/deduplicate": {
      "post": {
        "tags": [
          "deduplicate"
        ],
        "summary": "Post Deduplicate With Id",
        "operationId": "post_deduplicate_with_id_deduplicate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeduplicateHttpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeduplicateHttpResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/deduplicate/status/{request_id}": {
      "get": {
        "tags": [
          "deduplicate"
        ],
        "summary": "Get Deduplicate Request Status",
        "operationId": "get_deduplicate_request_status_deduplicate_status__request_id__get",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DedupeStatusHttpResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/getDuplicates/{doc_id}": {
      "get": {
        "tags": [
          "getDuplicates"
        ],
        "summary": "Get Duplicates By Id",
        "operationId": "get_duplicates_by_id_getDuplicates__doc_id__get",
        "parameters": [
          {
            "name": "doc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doc Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDuplicatesHttpResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Get Health",
        "operationId": "get_health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DedupeConfig": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "index": {
            "type": "string",
            "title": "Index"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/DedupeConfigField"
            },
            "type": "array",
            "title": "Fields"
          },
          "score_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score Threshold"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "active",
          "index",
          "fields",
          "created_at"
        ],
        "title": "DedupeConfig"
      },
      "DedupeConfigDeleteHttpResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "DedupeConfigDeleteHttpResponse"
      },
      "DedupeConfigField": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "query_type": {
            "$ref": "#/components/schemas/DedupeConfigFieldQueryType",
            "default": "match"
          },
          "fuzziness": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuzziness"
          },
          "boost": {
            "type": "number",
            "title": "Boost",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DedupeConfigField"
      },
      "DedupeConfigFieldQueryType": {
        "type": "string",
        "enum": [
          "term",
          "match"
        ],
        "title": "DedupeConfigFieldQueryType"
      },
      "DedupeConfigGetHttpResponse": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/DedupeConfig"
          }
        },
        "type": "object",
        "required": [
          "config"
        ],
        "title": "DedupeConfigGetHttpResponse"
      },
      "DedupeConfigHttpRequest": {
        "properties": {
          "index": {
            "type": "string",
            "title": "Index"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/DedupeConfigField"
            },
            "type": "array",
            "title": "Fields"
          },
          "score_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score Threshold"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "index",
          "fields"
        ],
        "title": "DedupeConfigHttpRequest"
      },
      "DedupeConfigPutHttpResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "DedupeConfigPutHttpResponse"
      },
      "DedupeStatusHttpResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/DeduplicationStatus"
          },
          "status_description": {
            "type": "string",
            "title": "Status Description",
            "default": ""
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "created_at"
        ],
        "title": "DedupeStatusHttpResponse"
      },
      "DeduplicateHttpRequest": {
        "properties": {
          "doc_id": {
            "type": "string",
            "title": "Doc Id"
          },
          "dedupe_config_name": {
            "type": "string",
            "title": "Dedupe Config Name"
          },
          "wait_before_exec_secs": {
            "type": "integer",
            "title": "Wait Before Exec Secs",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "doc_id",
          "dedupe_config_name"
        ],
        "title": "DeduplicateHttpRequest"
      },
      "DeduplicateHttpResponse": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id",
            "default": ""
          },
          "status": {
            "$ref": "#/components/schemas/DeduplicationStatus"
          }
        },
        "type": "object",
        "title": "DeduplicateHttpResponse"
      },
      "DeduplicationStatus": {
        "type": "string",
        "enum": [
          "inprogress",
          "completed",
          "paused",
          "failed"
        ],
        "title": "DeduplicationStatus"
      },
      "ErrorListResponse": {
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "errors"
        ],
        "title": "ErrorListResponse"
      },
      "ErrorResponse": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "default": ""
          },
          "message": {
            "type": "string",
            "title": "Message",
            "default": ""
          }
        },
        "type": "object",
        "title": "ErrorResponse"
      },
      "GetDuplicatesHttpResponse": {
        "properties": {
          "duplicates": {
            "items": {
              "$ref": "#/components/schemas/HttpDuplicateEntry"
            },
            "type": "array",
            "title": "Duplicates"
          }
        },
        "type": "object",
        "required": [
          "duplicates"
        ],
        "title": "GetDuplicatesHttpResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": ""
          }
        },
        "type": "object",
        "title": "HealthResponse"
      },
      "HttpDuplicateEntry": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "match_score": {
            "type": "number",
            "title": "Match Score"
          },
          "last_dedupe_request_id": {
            "type": "string",
            "title": "Last Dedupe Request Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "match_score",
          "last_dedupe_request_id"
        ],
        "title": "HttpDuplicateEntry"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
